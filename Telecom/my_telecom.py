# -*- encoding: utf-8 -*-

# Package containing common part and useful functions for labs


import matplotlib.pyplot as plt
from scipy import signal
import numpy as np


def get_sin_sig(t, freq, ampl):
    """
    :return: ampl * sin(freeq * t) + ampl * sin(2 * freeq * t)
    """
    return ampl * np.sin(2 * np.pi * freq * t) + ampl * np.cos(2 * 2 * np.pi * freq * t)


def get_rect_sig(t, freq, ampl):
    """
    :return: ampl * signal.square(2 * np.pi * freq * t)
    """
    return ampl * signal.square(2 * np.pi * freq * t)


def get_triang_sig(t, freq, ampl):
    """
    :return: ampl * signal.sawtooth(2 * np.pi * freq * t)
    """
    return ampl * signal.sawtooth(2 * np.pi * freq * t)


def plot_graphic(x, y, title=None, x_label="x", y_label="y", gr_form='-', xlim=None, ylim=None, show=False, save=False):
    """
    just my function for comfortable plotting
    """
    x = tuple(x)
    y = tuple(y)
    plt.xlabel(x_label)
    plt.ylabel(y_label)
    if title != None:
        plt.title(title)

    plt.plot(x, y, gr_form)

    if xlim != None:
        plt.xlim(xlim[0], xlim[1])
    if ylim != None:
        plt.ylim(ylim[0], ylim[1])

    if show:
        plt.show()
    if save:
        plt.savefig(title + '.png')
        plt.close()


# ---------------------------------------------------------------------------
def lab1_theory():
    """
    1.Название работы: Сигналы телекоммуникационных систем

    2.Цель: Познакомиться со средствами генерации и визуализации простых сигналов.

    3.Постановка задачи:
        Промоделировать синусоидальный и прямоугольный сигналы с различными параметрами.
        Получить их спектры. Вывести на график.

    4.Теоритический раздел
        Аналитическое исследование поведения информационной системы основано на построении адекватной математической модели,отражающей характеристики элементов системы и возможные способы их взаимодействия.
        Понятие функции, как определенной зависимости величины y от величины – х, математической записью в виде у(х) позволяет применять математический аппарат функций в качестве базовой основы построения моделей технических систем.
        Функции, служащие для описания реальных сигналов, всегда вещественны.
        Понятие "сигнал" широко используется в информационных системах и обычно обозначает физический процесс, который является материальным носителем информаци- онного сообщения – изменение какого-либо параметра носителя (напряжения, частоты, фазы, мощности, интенсивности и т.п.) во времени, в пространстве или в зависимости от других аргументов служит для передачи информации.

    5.Ход работы:
    """
    pass


def lab1_conclusion():
    """
    6.Выводы
        -график sinus_spectrum демонстрирует, что исходный гармонический сигнал является суммой 2-ух гармонических сигналов с частотами 20 и 40 Hz.
        -график rectangle_spectrum демонстрирует, что исходный прямоугольный сигнал является суммой большого количества гармонических сигналов с разными частотами.
        -график triangular_spectrum демонстрирует, что исходный треугольный сигнал является сверткой 2-ух прямоугольных сигналов.
    """
    pass


# ---------------------------------------------------------------------------
def lab2_theory():
    """
    1.Название работы: Ряд Фурье. Преобразование Фурье. Корреляция.

    2.Цель: Получить представление о спектрах телекоммуникационных сигналов.

    3.Постановка задачи:
        – Для сигналов, построенных в лабораторной работе No1, вы-
            полните расчет преобразования Фурье. Перечислите свойства
            преобразования Фурье.
        – С помощью функции корреляции найдите позицию синхро-
            посылки [101] в сигнале [0001010111000010]. Получите пакет
            данных, если известно, что его длина составляет 8 бит без
            учета синхропосылки. Вычислите корреляцию прямым мето-
            дом, воспользуйтесь алгоритмом быстрой корреляции, сравни-
            те время работы обоих алгоритмов.

    4.Теоритический раздел
        Свойства ряда Фурье:
            -Ряд Фурье — представление функции f с периодом τ ∞
        f(x)=a0 +􏰃Akcos􏰁2kπx−αk􏰂(1) 2τ
        k=1
            -Дискретное преобразование Фурье является линейным преобразованием. Переводит век-
        тор временных отсчетов в вектор спектральных отсчетов той же длинны.
            -Преобразование Фурье сигнала является разложением по гармоническим функциям всех частот в диапо- зоне от −∞ до +∞.
            -Позволяет при работе с сигналами осуществить частотно-временной переход.
            -Корреляция, и ее частный случай для центрированных сигналов – ковариация, являет- ся методом анализа сигналов.
            -Корреляционный анализ дает возможность установить в сигналах (или в рядах цифровых данных сигналов) наличие определенной связи изме- нения значений сигналов по независимой переменной.
            -В функциональном пространстве сигналов эта степень связи может выражаться в нормированных единицах коэффициента
        корреляции, т.е. в косинусе угла между векторами сигналов, и, соответственно,
        будет при- нимать значения от 1 (полное совпадение сигналов) до -1 (полная противоположность) и не зависит от значения (масштаба) единиц измерений.

    5.Ход работы:
    """
    pass


def lab2_conclusion():
    """
    6.Выводы:
        С помощью функции корреляции была найдена позиция синхропосылки в сигнале, был получен пакет данных. Корреляция была вычислена прямым методом, и методом быстрой корреляции.
    """
    pass


# ---------------------------------------------------------------------------
def lab3_theory():
    """
    1.Название работы: Линейная фильтрация

    2.Цель:изучить воздействие ФНЧ на тестовый сигнал с шумом.

    3.Постановка задачи:
        Сгенерировать гармонический сигнал с шумом
        и синтезировать ФНЧ. Получить сигнал во временной и частотной
        областях до и после фильтрации. Сделать выводы о воздействии
        ФНЧ на спектр сигнала.

    4.Теоритический раздел
            Фильтр нижних частот (ФНЧ) — электронный или любой другой фильтр,
        эффективно пропускающий частотный спектр сигнала ниже некоторой частоты (частоты среза)
        и подавляющий частоты сигнала выше этой частоты.
            Степень подавления каждой частоты зависит от вида фильтра.
            Идеальный фильтр нижних частот (sinc-фильтр) полностью подавляет все частоты входного
        сигнала выше частоты среза и пропускает без изменений все частоты ниже частоты среза.
        Переходной зоны между частотами полосы подавления и полосы пропускания не существует.
        Идеальный фильтр нижних частот может быть реализован лишь теоретически
        с помощью умножения спектра (преобразования Фурье) входного сигнала
        на прямоугольную функцию в частотной области, или, что даёт тот же эффект,
        свёртки сигнала во временной области с sinc-функцией.
            Фильтр с конечной импульсной характеристикой (нерекурсивный фильтр, КИХ-фильтр) —
        один из видов электронных фильтров, характерной особенностью которого является ограниченность
        по времени его импульсной характеристики (с какого-то момента времени она становится точно равной нулю).
            Знаменатель передаточной функции такого фильтра — некая константа.
            Фильтр с бесконечной импульсной характеристикой (рекурсивный фильтр, БИХ-фильтр) —
        электронный фильтр, использующий один или более своих выходов в качестве входа,
        то есть образует обратную связь.Основным свойством таких фильтров является то,
        что их импульсная переходная характеристика имеет бесконечную длину во временной области,
        а передаточная функция имеет дробно-рациональный вид. Такие фильтры могут быть как аналоговыми
        так и цифровыми.


    5.Ход работы:
    """
    pass


def lab3_conclusion():
    """
    6.Выводы:
        В данной работе была произведенна фильтрация сигнала КИХ и БИХ фильтрами.
        Оба результат фильтрации очень близки к исходному сигналу, но меньшую абсолютную ошибку
    обеспечил БИХ-фильтр.
        На граффике, иллюстрирующем спектры видно, что шумов стало меньше, особенно в области высоких частот.

    """
    pass


# ---------------------------------------------------------------------------
def lab4_theory():
    """
    1.Название работы: Аналоговая модуляция

    2.Цель: изучение амплитудной модуляции/демодуляции сигнала.


    3.Постановка задачи:
        1. Сгенерировать однотональный сигнал низкой частоты.
        2. Выполнить амплитудную модуляцию (АМ) сигнала по зако-
    ну u(t) = (1 + M U m cos Ωt) cos(ω 0 t + φ 0 ) для различных значе-
    ний глубины модуляции M. Используйте встроенную функцию
    MatLab ammod 1
        3. Получить спектр модулированного сигнала.
        4. Выполнить модуляцию с подавлением несущей
    u(t) = M U m cos(Ωt) cos(ω 0 t + φ 0 ). Получить спектр.
        5. Выполнить однополосную модуляцию:
    N
    U m X
    M n (cos(ω 0 +Ω n )t+φ 0 +Φ n )
    u(t) = U m cos(Ωt) cos(ω 0 t+φ 0 )+
    2 n=1
    положив n=1
        6. Выполнить синхронное детектирование и получить исходный однополосный сигнал.
        7. Рассчитать КПД модуляции.

    4.Теоритический раздел
        Амплитудная модуляция — вид модуляции, при которой изменяемым параметром
    несущего сигнала является его амплитуда.
        Пусть
    S(t) — информационный сигнал, |S(t)|<1,
    Uc(t) — несущее колебание.
        Тогда амплитудно-модулированный сигнал Uam(t) может быть записан следующим образом:
    Uam(t)=Uc(t)*[1+m*S(t)].
    Здесь m — некоторая константа, называемая коэффициентом модуляции.
        Формула описывает несущий сигнал Uc(t), модулированный по амплитуде
    сигналом S(t) с коэффициентом модуляции m. Предполагается также, что выполнены условия:
    |S(t)|<1, 0<m<=1.

        Выполнение условий необходимо для того, чтобы выражение в квадратных скобках в всегда было положительным.
    Если оно может принимать отрицательные значения в какой-то момент времени,
    то происходит так называемая перемодуляция (избыточная модуляция).
        Простые демодуляторы (типа квадратичного детектора) демодулируют такой сигнал с сильными искажениями.

    Демодуляция — процесс, обратный модуляции колебаний, выделение информационного
    (модулирующего) сигнала из модулированного колебания высокой (несущей) частоты.

        Одним из самых распространенных методов демодуляции амплитудно-модулированных сигналов
    является синхронное детектирование.
    При синхронном детектировании амплитудно-модулированный сигнал умножается на опорное
    немодулированное колебание с частотой несущего колебания,
    затем получившийся сигнал пропускается через фильтр нижних частот.
        В результате умножения получается сигнал, состоящий из двух слагаемых,
    первое из которых прямо пропорционально исходному модулирующему сигналу,
    а второе — амплитудно-модулированному сигналу с удвоенной несущей частотой.
    Второе слагаемое подавляет фильтр нижних частот, таким образом оставляется сигнал,
    прямо пропорциональный исходному информационному сигналу.




    5.Ход работы:
    """
    pass


def lab4_conclusion():
    """
    6.Выводы:
        В ходе выполнения работы я ознакомился с амплитудной модуляцией и демодуляцией, их разновидностями.
        Для однотональной модуляции и модуляции с подавлением несущей были продемонстрированы частотные и временные характеристики закодированных и декодированных сигналов.
        Декодировать последний сигнал не удалось.

    """
    pass


# ---------------------------------------------------------------------------
def lab5_theory():
    """
    1.Название работы: Частотная и фазовая модуляция

    2.Цель: изучение частотной и фазовой модуляции/демодуляции сигнала.

    3.Постановка задачи:
        1. Сгенерировать однотональный сигнал низкой частоты.

        2. Выполнить фазовую модуляцию/демодуляцию сигнала по закону
    u(t) = (U m cos(Ωt + ks(t)), используя встроенную функцию
    MatLab pmmod, pmdemod

        3. Получить спектр модулированного сигнала.

        4. Выполнить частотную модуляцию/демодуляцию по закону
    u(t) = Um * cos(ω0*t + k * integrate(0,t,s(t) * dt + φ0)
    используя встроенные функции MatLab fmmod, fmdemod

    4.Теоритический раздел
        Частотная модуляция — вид аналоговой модуляции, при котором информационный
        сигнал управляет частотой несущего колебания. По сравнению с
        амплитудной модуляцией здесь амплитуда остаётся постоянной.
        ЧМ применяется для высококачественной передачи звукового (низкочастотного)
        сигнала в радиовещании (в диапазоне УКВ), для звукового сопровождения
        телевизионных программ, передачи сигналов цветности в телевизионном
        стандарте SECAM, видеозаписи на магнитную ленту, музыкальных синтезаторах.
        Высокое качество кодирования аудиосигнала обусловлено тем, что в радиовещании
        при ЧМ применяется большая (по сравнению с шириной спектра сигнала АМ)
        девиация несущего сигнала, а в приёмной аппаратуре используют ограничитель
        амплитуды радиосигнала для устранения импульсных помех. Такая модуляция
        называется широкополосной ЧМ. В радиосвязи применяется узкополосная
        ЧМ с небольшой девиацией частоты несущего сигнала.

        Фазовая модуляция — вид модуляции, при которой фаза несущего колебания
        изменяется прямо пропорционально информационному сигналу.
        В случае, когда информационный сигнал является дискретным, то говорят
        о фазовой манипуляции. Возможна относительная фазовая манипуляция (ОФМ),
        если информация передается не в самой фазе, а в разности фаз соседних
        сигналов в последовательности. Хотя для сокращения занимаемой полосы
        частот манипуляция может производится не прямоугольным, а
        сглаженным импульсом, например, колоколообразным, приподнятым
        косинусом и др., но и в этом случае обычно говорят о манипуляции.
        По характеристикам фазовая модуляция близка к частотной модуляции.
        В случае синусоидального модулирующего (информационного) сигнала,
        результаты частотной и фазовой модуляции совпадают.



    5.Ход работы:
    """
    pass


def lab5_conclusion():
    """
    6.Выводы:
        В ходе выполнения работы мы ознакомились с угловой модуляцией и демодуляцией,
        их разновидностями.
        Для фазовой и частотной модуляции были продемонстрированы частотные и
        временные характеристики закодированных и декодированных сигналов.


    """
    pass

# ---------------------------------------------------------------------------
def lab7_theory():
    """
    1.Название работы: Помехоустойчивое кодирование

    2.Цель: Изучение методов помехоустоqчивого кодирования и сравнение их свойств.

    3.Постановка задачи:
        Провести кодирование/декодирование сигнала, полученного кодом Хэмминга 2-мя способами: с помощью встроенных функций encode/decode, а также через создание проверочной и генераторной матриц и вычисление синдрома. Оценить корректирующую способность кода.
        Выполнить кодирование/декодирование циклическим кодом, кодом БЧХ. Оценить корректирующую способность кода.


    4.Теоритический раздел
        Помехоустойчивое кодирование — кодирование, предназначенное для передачи данных по каналам с помехами, обеспечивающее исправление возможных ошибок передачи вследствие помех.

        Для обнаружения ошибок используют коды обнаружения ошибок, для исправления — помехоустойчивые коды.

        При помехоустойчивом кодировании в поток передаваемых символов вводятся дополнительные (избыточные) символы для исправления возникающих на приемной стороне ошибок. Это требует увеличения скорости передачи по каналу, что при выбранном типе модема эквивалентно расширению полосы частот сигнала и уменьшению энергии посылки. Поэтому может возникнуть правомерный вопрос о целесообразности использования избыточного кодирования. На этот вопрос дает ответ теорема Шеннона о пропускной способности непрерывного канала связи, из которой следует, что пропускная способность непрерывного канала увеличивается с расширением его полосы, но при оптимальном (в широком смысле) кодировании. Поэтому следует ожидать повышения достоверности передачи при заданной скорости и отношении сигнал/шум в канале при внесении избыточности.

        Тип кода определяет принцип, по которому вносятя избыточные символы. В простейшем случае, группе из k символов источника ставится в соответствие n символов, передаваемых по каналу. Такой код называется блочным и записывается условно как (n , k)-код. Возможно также использование непрерывных кодов, характеризующихся тем, что операции кодирования и декодирования производятся над непрерывной последовательностью символов без разбиения на блоки. Рассмотрим принципы помехоустойчивого кодирования на примере блочного двоичного кода. Если к символам источника добавляются избыточные символы, то код называют систематическим. Если группе информационных символов ставится в соответствие новая группа символов, передаваемая по каналу, в которой информационных символов в явном виде нет, то код называется неразделимым.

        Циклические коды относятся к классу линейных. Поэтому для их построения достаточно знать порождающую матрицу.

        К циклическим кодам относятся коды Хэмминга, которые являются одним из немногочисленных примеров совершенных кодов. Они имеют кодовое расстояние d= 3 и исправляют все одиночные ошибки. Длина кода выбирается из условия: $$2^{n-k} - 1 = n,$$ которое имеет простой смысл: число различных ненулевых синдромов равно числу символов в кодовой последовательности. Так, существуют коды Хэмминга $$( 2^r - 1, 2^r - r - 1 ),$$ в частности, коды: (7, 4), (15, 11), (31, 26), (63, 57) и т. д.

        Среди циклических кодов широкое применение нашли коды Боуза— Чоудхури—Хоквингема (БЧХ). Можно показать, что для любых целых положительных чисел m и l< n/2 существует двоичный код БЧХ длины
        $$n=2^m−1 $$
        с кодовым расстоянием d > 2l + 1, причем число проверочных символов (n−k)<=ml
        . Для кодов БЧХ умеренной длины и ФМ при передаче символов можно добиться значительного выигрыша (4 дБ и более). Он достигается при скоростях (1/3 < k/n < 3/4). При очень высоких и очень низких скоростях выигрыш от кодирования существенно уменьшается.



    5.Ход работы:
    """
    pass


def lab7_conclusion():
    """
    6.Выводы:
        В данной работе были изучены различные способы помехоустойчивого кодирования.
        Было установленно, что код Хэмминга может обнаружить и скорректировать меньшее колличесвто ошибок,
        чем другие коды, но при этом он требует меньшее колличество контрольных бит.


    """
    pass

